(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{706:function(t,a,s){"use strict";s.r(a);var n=s(2),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_0102-0109"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0102-0109"}},[t._v("#")]),t._v(" 0102 - 0109")]),t._v(" "),s("h2",{attrs:{id:"_0103-원격-저장소에-push된-파일을-ignore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0103-원격-저장소에-push된-파일을-ignore"}},[t._v("#")]),t._v(" 0103 - 원격 저장소에 push된 파일을 ignore")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("문제"),s("br"),t._v("\n원격 저장소에 이미 올라가 있는 파일을 git ignore에 추가 하여 파일을 무시하고 싶은 경우"),s("br"),t._v("\n그냥 ignore에 추가시키면 추가가 되지 않는다.")])]),t._v(" "),s("li",[s("p",[t._v("해결")])])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -r --cached "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chore: git ignore"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])])]),s("p",[t._v("이와 같이 명령을 실행하게 되면 깃의 캐시를 다 날린 다음 다시 add를 진행하게 된다.")]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"_0104-jpa-연관관계"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0104-jpa-연관관계"}},[t._v("#")]),t._v(" 0104 - JPA 연관관계")]),t._v(" "),s("h3",{attrs:{id:"jpa에서-가장-중요한-것"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jpa에서-가장-중요한-것"}},[t._v("#")]),t._v(" JPA에서 가장 중요한 것")]),t._v(" "),s("ul",[s("li",[t._v("객체와 관계형 데이터베이스 테이블이 어떻게 매핑되는지를 이해하는 것이 중요")]),t._v(" "),s("li",[t._v("1차원 매핑\n"),s("ul",[s("li",[t._v("@Entity, @Column, @Id, @GeneratedValue, @Enumerated.. 와 같은 말 그대로 객체와 데이터베이스 사이의 일대일로 대응되는 것으로써 기본적인 Annotation을 숙지")])])]),t._v(" "),s("li",[t._v("연관 관계 매핑")])]),t._v(" "),s("h3",{attrs:{id:"연관-관계-정의-규칙"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#연관-관계-정의-규칙"}},[t._v("#")]),t._v(" 연관 관계 정의 규칙")]),t._v(" "),s("p",[t._v("연관 관계를 매핑할 때, 생각해야 할 3가지")]),t._v(" "),s("ul",[s("li",[t._v("방향 : 단방향, 양방향")]),t._v(" "),s("li",[t._v("연관 관계의 주인 : 양방향일 때, 연관 관계에서 관리 주체")]),t._v(" "),s("li",[t._v("다중성 : 다대일(N:1), 일대다(1:N), 일대일(1:1), 다대다(N:M)")])]),t._v(" "),s("h4",{attrs:{id:"단방향-양방향"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#단방향-양방향"}},[t._v("#")]),t._v(" 단방향, 양방향")]),t._v(" "),s("p",[t._v("데이터베이스 테이블은 외래키 하나로 양 쪽 테이블 조인이 가능. 따라서 데이터 베이스는 단방향, 양방향을 나눌 필요가 없다."),s("br"),t._v("\n그러나 객체는 참조용 필드가 있는 객체만 다른 객체를 참조하는 것이 가능하기 때문에 두 객체 사이에 하나의 객체만 참조용 필드를 갖고 참조하면 단방향 관계, 두 객체가 모드가 각각 참조용 필드를 갖고 참조하면 양방향 관계가 된다."),s("br"),t._v("\n엄밀하게는 양방향 관계는 없고 두 객체가 단방향 참조를 각각 가져서 양방향 관계처럼 사용된다.")]),t._v(" "),s("h4",{attrs:{id:"연관-관계의-주인"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#연관-관계의-주인"}},[t._v("#")]),t._v(" 연관 관계의 주인")]),t._v(" "),s("p",[t._v("두 단방향 관계에서 제어의 권한(외래키를 비롯한 테이블 레코드를 저장, 수정, 삭제처리)을 갖는 실질적인 관계까 어떤 것인지 JPA에게 제공, 연관 관계의 주인이 아니라면 조회만 가능하다."),s("br"),t._v("\n연관 관계의 주인이 아닌 객체에서 "),s("code",[t._v("mappedBy")]),t._v(" 속성을 사용하고 외래 키가 있는 곳을 연관 관계의 주인으로 정하면 된다.")]),t._v(" "),s("h4",{attrs:{id:"다중성"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#다중성"}},[t._v("#")]),t._v(" 다중성")]),t._v(" "),s("ul",[s("li",[t._v("다대일(N:1) - 단방향(주인이 'N') : 사용가능")]),t._v(" "),s("li",[t._v("다대일(N:1) - 양방향(주인이 'N') : 사용가능")]),t._v(" "),s("li",[t._v("일대다(1:N) - 단방향(주인이 '1') : 사용불가")]),t._v(" "),s("li",[t._v("일대다(1:N) - 양방향(주인이 '1') : 사용불가")]),t._v(" "),s("li",[t._v("일대일(1:1) - 단방향 : 사용가능")]),t._v(" "),s("li",[t._v("일대일(1:1) - 양방향 : 사용가능")]),t._v(" "),s("li",[t._v("다대다(N:M) - 실무 사용금지 => 자기도 모르는 복잡한 조인의 쿼리가 발생할 수 도 있음. 따라서 중간 테이블을 생성할 것")])]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"_0105-datajpatest-vs-springboottest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0105-datajpatest-vs-springboottest"}},[t._v("#")]),t._v(" 0105 - @DataJpaTest vs @SpringBootTest")]),t._v(" "),s("h3",{attrs:{id:"datajpatest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#datajpatest"}},[t._v("#")]),t._v(" @DataJpaTest")]),t._v(" "),s("p",[t._v("@DataJpaTest는 오직 JPA 컴포넌트들만을 테스트하기 위한 어노테이션."),s("br"),t._v("\nfull-auto config를 해제하고 JPA 테스트와 연관된 config만 적용한다.")]),t._v(" "),s("ul",[s("li",[t._v("@DataJpaTest가 포함하고 있는 어노테이션")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TYPE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RUNTIME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Documented")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Inherited")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@BootstrapWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("autoconfigure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("orm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jpa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("DataJpaTestContextBootstrapper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ExtendWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jupiter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("SpringExtension")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@OverrideAutoConfiguration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("enabled"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@TypeExcludeFilters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataJpaTypeExcludeFilter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AutoConfigureCache")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AutoConfigureDataJpa")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AutoConfigureTestDatabase")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AutoConfigureTestEntityManager")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ImportAutoConfiguration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataJpaTest")]),t._v("\n")])])]),s("ol",[s("li",[t._v("@Transactional\n"),s("ul",[s("li",[t._v("자동으로 롤백")])])]),t._v(" "),s("li",[t._v("@AutoConfigureTestDatabase\n"),s("ul",[s("li",[t._v("replace=AutoConfigureTestDatabase.Replace가 디폴트로 설정되어 있어, 설정해놓은 DB가 아닌 in-memory DB를 활용해서 테스트가 실행된다.")]),t._v(" "),s("li",[t._v("EmbeddedBatabaseConnection 클래스를 보면 H2, DERBY, HSQL, HSQLDB 중 사용 가능한 in-memory DB에 자동으로 커넥션을 설정하는 것을 확인할 수 있다.")]),t._v(" "),s("li",[t._v("replace=AutoConfigureTestDatabase.NONE 으로 값을 덮어 씌우면 설정해놓은 DB를 테스트에 사용할 수 있다.")])])])]),t._v(" "),s("h3",{attrs:{id:"springboottest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springboottest"}},[t._v("#")]),t._v(" @SpringBootTest")]),t._v(" "),s("p",[t._v("@SpringBootTest는 full application config을 로드에서 통합 테스트를 진행하기 위한 어노테이션이다.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TYPE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RUNTIME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Documented")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Inherited")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@BootstrapWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringBootTestContextBootstrapper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ExtendWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jupiter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("SpringExtension")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringBootTest")]),t._v("\n")])])]),s("ul",[s("li",[t._v("설정해 놓은 config, context, components를 모두 로드한다.")]),t._v(" "),s("li",[t._v("DataSource bean을 그대로 사용하기 때문에 in-memory, 로컬, 외부 상관 없이 DB를 사용해서 테스트가 실행된다.")]),t._v(" "),s("li",[t._v("테스트할 때마다 DB가 롤백되지 않기 때문에 @Transactional을 사용해야 한다.")])]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"_0106-junit5-extendwith-mockmvc-testconstructor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0106-junit5-extendwith-mockmvc-testconstructor"}},[t._v("#")]),t._v(" 0106 - Junit5 : @ExtendWith, MockMvc, @TestConstructor")]),t._v(" "),s("h3",{attrs:{id:"extendwith"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#extendwith"}},[t._v("#")]),t._v(" @ExtendWith")]),t._v(" "),s("ul",[s("li",[t._v("Junit 4의 @RunWith가 Junit 5에서는 @ExtendWith로 변경")]),t._v(" "),s("li",[t._v("@SpringBootTest 애노테이션에 포함되어 있기 떄문에 둘다 명시할 필요는 없다")])]),t._v(" "),s("h3",{attrs:{id:"mockmvc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mockmvc"}},[t._v("#")]),t._v(" MockMvc")]),t._v(" "),s("ul",[s("li",[t._v("Spring MVC 에플리케이션을 테스트 해볼 수 있게 도와준다.")]),t._v(" "),s("li",[t._v("실제 서버의 실행 없이 요청하고 응답을 받을 수 있다.")])]),t._v(" "),s("p",[t._v("MocmMvc와 WebApplicationContext를 @Autowired 애노페이션을 이용해 의존관계를 주입하고, setup() 메서드로 MockMvc를 초기화 한다."),s("br"),t._v("\n@BeforeEach 애노테이션을 명시함으로써 테스트가 실행되기 전 setup() 메서드가 실행되어 반복적으로 초기화 할 필요가 없다.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebMvcTest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloControllerTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MockMvc")]),t._v(" mockMvc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebbApplicationContext")]),t._v(" webApplicationContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@BeforeEach")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mockMvc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MockMvcBuilders")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("webAppContextSetup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("webApplicationContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"testresttemplate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#testresttemplate"}},[t._v("#")]),t._v(" TestRestTemplate")]),t._v(" "),s("ul",[s("li",[t._v("@SpringBootTest의 WebEnvironment설정으로 실제 서버를 동작하게 한 뒤, RestTemplate을 통해 요청, 응답 받을 수 있다.")]),t._v(" "),s("li",[t._v("TestRestTemplate는 스프링에서 제공하는 테스트용 RestTemplate이며, 자동으로 내장 서버와 연결된다")]),t._v(" "),s("li",[t._v("필요하다면 RestTemplateBuilder를 통해 여러 설정을 추가할 수 있다.")])]),t._v(" "),s("blockquote",[s("p",[t._v("MockMvc는 사이드에서 테스트 하는것, TestRestTemplate는 클라이언트 사이드에서 테스트 해보는 것")])]),t._v(" "),s("h3",{attrs:{id:"testconstructor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#testconstructor"}},[t._v("#")]),t._v(" @TestConstructor")]),t._v(" "),s("p",[t._v("JUnit 5부터는 생성자를 통한 의존관계 주입이 가능하다."),s("br"),t._v("\nAutowireMode.ALL 설정을 통해 @Autowired 애노테이션을 명시하지 않고, private final로 선언된 필드들에 의존관계 주입이 가능하다.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequiredArgsConstructor")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@TestConstructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("autowireMode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestConstructor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AutowireMode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ALL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootTest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloService")]),t._v(" helloService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" 테스트"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 테스트 코드 생략")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("br"),t._v(" "),s("h2",{attrs:{id:"_0107-springboot-test"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0107-springboot-test"}},[t._v("#")]),t._v(" 0107 - Springboot Test")]),t._v(" "),s("h3",{attrs:{id:"스프링부트-테스트-핵심-기능"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#스프링부트-테스트-핵심-기능"}},[t._v("#")]),t._v(" 스프링부트 테스트 핵심 기능")]),t._v(" "),s("ul",[s("li",[t._v("의존성")])]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-test"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("test"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"springboottest-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springboottest-2"}},[t._v("#")]),t._v(" @SpringBootTest")]),t._v(" "),s("blockquote",[s("p",[t._v("스프링부투에서는 @SpringBootTest 어노테이션을 통해 애플리케이션 테스트에 필요한 거의 모든 의존성들을 제공해준다.")])]),t._v(" "),s("blockquote",[s("p",[t._v("@SpringBootTest 어노테이션은 Spring Main Application(@SpringBootApplication)을 찾아가 하위의 모든 Bean을 Scan한다.")])]),t._v(" "),s("blockquote",[s("p",[t._v("그 후 Test용 Application Context를 만들면서 빈을 등록해주고, mock bean을 찾아가 그 빈만 mock bean으로 교체해준다.")])]),t._v(" "),s("h3",{attrs:{id:"webenvironment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webenvironment"}},[t._v("#")]),t._v(" WebEnvironment")]),t._v(" "),s("ul",[s("li",[t._v("MOCK : mock servlet environment로 내장 톰캣 구동을 안한다.")]),t._v(" "),s("li",[t._v("RANDOM_PORT, DEFINED_PORT : 내장 톰캣 사용")]),t._v(" "),s("li",[t._v("NONE : 서블릿 환경 제공 안함")])]),t._v(" "),s("h4",{attrs:{id:"_1-mock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-mock"}},[t._v("#")]),t._v(" 1. MOCK")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RunWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringRunner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("webEnvironment "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringBootTest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WebEnvironment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MOCK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AutoConfigureMockMvc")]),t._v("\n")])])]),s("p",[t._v("@RunWith(SpringRunner.class) 어노테이션은 JUnit이 내장된 Runner를 실행할 때 SpringRunner.class라는 확장된 클래스를 실행하라고 지시한다.")]),t._v(" "),s("p",[t._v("테스트의 WebEnvironment 환경은 기본적으로 MOCK으로 잡혀있으며, 이 때 내장톰캣을 구동하지 않아 서블릿이 아니라 서블릿을 Mocking한 컨테이너가 뜬다.")]),t._v(" "),s("p",[t._v("Mockup이된 서블릿과 interaction 하기 위해서는 MockMVC라는 클라이언트를 사용해야 한다.")]),t._v(" "),s("h4",{attrs:{id:"_2-random-port"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-random-port"}},[t._v("#")]),t._v(" 2. RANDOM_PORT")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RunWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringRunner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("webEnvironment "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringBootTest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WebEnvironment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RANDOM_PORT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AutoConfigureMockMvc")]),t._v("\n")])])]),s("p",[t._v("WebEnvironment가 RANDOM_PORT를 사용할 때 실제로 서블릿 컨테이너(내장 톰캣)이 랜덤한 포트로 뜬다. 이떄부터는 Test용 RestTemplate, Web Client를 사용한다.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" testRestTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getForObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqualTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello dsunni"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-mockbean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-mockbean"}},[t._v("#")]),t._v(" 3. MockBean")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RunWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringRunner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("webEnvironment "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringBootTest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WebEnvironment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RANDOM_PORT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AutoConfigureMockMvc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ControllerTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestRestTemplate")]),t._v(" testRestTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@MockBean")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestService")]),t._v(" mockTestService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("@MockBean을 붙여서 mockTestService를 만들면 Application Context안에 TestService 빈을 mockTestService빈으로 교체한다. 실질적으로 원본이 아닌 mock bean을 사용해 테스트할 수 있다.")]),t._v(" "),s("h4",{attrs:{id:"_4-webtestclient"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-webtestclient"}},[t._v("#")]),t._v(" 4. @WebTestClient")]),t._v(" "),s("p",[t._v("java5 Spring MVC WebFlux에 새로 추가된 Rest Client 중 하나이다. 기존에 사용하던 Rest Client는 Synchronous였다. 오청 하나 보내면 끝날때 까지 기다렸다가 요청을 보낼 수 있었다.")]),t._v(" "),s("p",[t._v("WebTestClient는 Asynchronous하게 동작한다. 요청을 보내고 응답이 오면 그 떄 CallBackEvent가 발생해 실행할 수 있다.")]),t._v(" "),s("ul",[s("li",[t._v("의존성 추가")])]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-webflux"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebTestClient")]),t._v(" webTestClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("when")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mockiService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("thenReturn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        webTestClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//request 만들어서")]),t._v("\n          \t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exchange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//보내고")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expectStatus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isOk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//검증")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expectBody")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqualTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello test"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   \n")])])]),s("h3",{attrs:{id:"슬라이스-테스트"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#슬라이스-테스트"}},[t._v("#")]),t._v(" 슬라이스 테스트")]),t._v(" "),s("p",[t._v("레이어 별로 잘라서 테스트하고 싶을 때 사용. 레이어 별로 빈이 등록됨")]),t._v(" "),s("ul",[s("li",[t._v("@JsonTest")]),t._v(" "),s("li",[t._v("@WebMvcTest")]),t._v(" "),s("li",[t._v("@WebFluxTest")]),t._v(" "),s("li",[t._v("@DataJpaTest")])]),t._v(" "),s("h3",{attrs:{id:"테스트-유틸"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#테스트-유틸"}},[t._v("#")]),t._v(" 테스트 유틸")]),t._v(" "),s("ul",[s("li",[t._v("OutputCapture")]),t._v(" "),s("li",[t._v("TestPropertyValues")]),t._v(" "),s("li",[t._v("TestRestTemplate")]),t._v(" "),s("li",[t._v("ConfigFileApplicationContextInitializer")])])])}),[],!1,null,null,null);a.default=e.exports}}]);