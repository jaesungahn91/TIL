(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{725:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_0606-0619"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0606-0619"}},[t._v("#")]),t._v(" 0606 ~ 0619")]),t._v(" "),a("h2",{attrs:{id:"_0610-테스트-더블-test-double"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0610-테스트-더블-test-double"}},[t._v("#")]),t._v(" 0610 - 테스트 더블 (Test Double)")]),t._v(" "),a("h3",{attrs:{id:"테스트-더블-test-double-이란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#테스트-더블-test-double-이란"}},[t._v("#")]),t._v(" 테스트 더블(Test Double)이란?")]),t._v(" "),a("p",[t._v("xUnit Test Patterns의 저자인 제라드 메스자로스가 만든 용어로 테스트를 진행하기 어려운 경우 이를 대신해 테스트를 진행할 수 있도록 만들어주는 객체를 말한다.")]),t._v(" "),a("p",[t._v("예를 들어 우리가 데이터베이스로부터 조회한 값을 연산하는 로직을 구현했다고 하자. 해당 로직을 테스트하기 위해선 항상 데이터베이스의 영향을 받을 것이고, 이는 데이터베이스의 상태에 따라 다른 결과를 유발할 수도 있다.")]),t._v(" "),a("p",[t._v("이렇게 테스트하려는 객체와 연관된 객체를 사용하기가 어렵고 모호할 때 대신 해줄 수 있는 객체를 테스트 더블이라 한다.")]),t._v(" "),a("h3",{attrs:{id:"테스트-더블의-종류"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#테스트-더블의-종류"}},[t._v("#")]),t._v(" 테스트 더블의 종류")]),t._v(" "),a("p",[t._v("테스트 더블은 크게 Dummy, Fake, Stub, Spy, Mock으로 나뉜다.")]),t._v(" "),a("h4",{attrs:{id:"_1-dummy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-dummy"}},[t._v("#")]),t._v(" 1. Dummy")]),t._v(" "),a("ul",[a("li",[t._v("가장 기본적인 테스트 더블이다.")]),t._v(" "),a("li",[t._v("인스턴스화 된 객체가 필요하지만 기능은 필요하지 않은 경우에 사용한다.")]),t._v(" "),a("li",[t._v("Dummy 객체의 메서드가 호출되었을 때 정상 동작은 보장하지 않는다.")]),t._v(" "),a("li",[t._v("객체는 전달되지만 사용되지 않는 객체이다.")])]),t._v(" "),a("p",[t._v("정리하면 인스턴스화된 객체가 필요해서 구현한 가짜 객체일 뿐이고, 생성된 Dummy 객체는 정상적인 동작을 보장하지 않는다.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PringWarning")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrintWarningDummy")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrintWarning")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 아무런 동작을 하지 않는다.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("실제 객체는 PrintWarning 인터페이스의 구현체를 필요하지만, 특정 테스트에서는 해당 구현체의 동작이 전혀 필요하지 않을 수 있다. 실제 객체가 로그용 경고만 출력한다면 테스트 환경에서는 전혀 필요 없기 때문이다."),a("br"),t._v("\n이런 경우에는 print()가 아무런 동작을 하지 않아도 테스트에는 영향을 미치지 않는다."),a("br"),t._v("\n이처럼 동작하지 않아도 테스트에는 영향을 미치지 않는 객체를 Dummy 객체라고 한다.")]),t._v(" "),a("h4",{attrs:{id:"_2-fake"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-fake"}},[t._v("#")]),t._v(" 2. Fake")]),t._v(" "),a("ul",[a("li",[t._v("복잡한 로직이나 객체 내부에서 필요로 하는 다른 외부 객체들의 동작을 단순화하여 구현한 객체이다.")]),t._v(" "),a("li",[t._v("동작의 구현을 가지고 있지만 실제 프로덕션에는 적합하지 않은 객체이다.")])]),t._v(" "),a("p",[t._v("정리하면 동작은 하지만 실제 사용되는 객체처럼 정교하게 동작하지는 않는 객체를 말한다.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Entity")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Id")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserRepository")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FakeUserRepository")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserRepository")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collection")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" users "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("테스트해야 하는 객체가 데이터베이스와 연관되어 있다고 가정한다.")]),t._v(" "),a("p",[t._v("그럴 경우 실제 데이터베이스를 연결해서 테스트해야 하지만, 실제 데이터베이스 대신 가짜 데이터베이스 역할을 하는 FakeUserRepository를 만들어 테스트객체에 주입하는 방법도 있다. 이렇게 하면 테스트 객체는 데이터베이스에 의존하지 않으면서도 동일하게 동작을하는 가짜 데이터베이스를 가지게 된다.")]),t._v(" "),a("h4",{attrs:{id:"_3-stub"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-stub"}},[t._v("#")]),t._v(" 3. Stub")]),t._v(" "),a("ul",[a("li",[t._v("Dummy 객체가 실제로 동작하는 것 처럼 보이게 만들어 놓은 객체이다.")]),t._v(" "),a("li",[t._v("인터페이스 또는 기본 클래스가 최소한으로 구현된 상태이다.")]),t._v(" "),a("li",[t._v("테스트에서 호출된 요청에 대해 미리 준비해둔 결과를 제공한다.")])]),t._v(" "),a("p",[t._v("정리하면 테스트를 위해 프로그래밍된 내용에 대해서만 준비된 결과를 제공하는 객체이다.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StubUserRepository")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserRepository")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Test User"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("위의 코드처럼 StubUserRepository는 findByID() 메서드를 사용하면 언제나 동일한 id값에 TestUser라는 이름을 가진 User 인스턴스를 반환받는다."),a("br"),t._v("\n테스트 환경에서 User 인스턴스의 name을 Test User만 받기를 원하는 경우 이처럼 동작하는 객체를 만들어 사용할 수 있다."),a("br"),t._v("\n물론 이러한 방식의 단점은 테스트가 수정될 경우 Stub 객체도 함께 수정해야 하는 단점이 있다."),a("br"),t._v("\n우리가 테스트에서 자주 사용하는 Mockito 프레임워크도 Stub와 같은 역할을 해준다."),a("br"),t._v("\n이처럼 테스트를 위해 의도한 결과만 반환되도록 하기 위한 객체가 Stub이다.")]),t._v(" "),a("h4",{attrs:{id:"_4-spy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-spy"}},[t._v("#")]),t._v(" 4. Spy")]),t._v(" "),a("ul",[a("li",[t._v("Stub의 역할을 가지면서 호출된 내용에 대해 약간의 정보를 기록한다.")]),t._v(" "),a("li",[t._v("테스트 더블로 구현된 객체에 자기 자신이 호출 되었을 때 확인이 필요한 부분을 기록하도록 구현한다.")]),t._v(" "),a("li",[t._v("실체 객체처럼 동작시킬 수도 있고, 필요한 부분에 대해서는 Stub로 만들어서 동작을 지정할 수도 있다.")])]),t._v(" "),a("p",[t._v("정리하면 실제 객체로도 사용할 수 있고 Stub 객체로도 활용할 수 있으며 필요한경우 특정 메서드가 제대로 호출되었는지 여부를 확인할 수 있다.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MailingService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sendMailCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collection")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mail")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" mails "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendMail")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mail")]),t._v(" mail"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sendMailCount"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        mails"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mail"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSendMailCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sendMailCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("MailingService는 sendMail을 호출할 때마다 보낸 메일을 저장하고 몇 번 보냈는지를 체크한다. 그리고 나중에 메일을 보낸 횟수를 물어볼 때 sendMailCount를 반환한다."),a("br"),t._v("\n이처럼 자기 자신이 호출된 상황을 확인할 수 있는 객체가 Spy이다."),a("br"),t._v("\n이 또한 Mockito 프레임워크의 verify() 메서드가 같은 역할을 한다.")]),t._v(" "),a("h4",{attrs:{id:"_5-mock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-mock"}},[t._v("#")]),t._v(" 5. Mock")]),t._v(" "),a("ul",[a("li",[t._v("호출에 대한 기대를 명세하고 내용에 따라 동작하도록 프로그래밍 된 객체.")]),t._v(" "),a("li",[t._v("Mockito 프레임워크가 대표적인 Mock 프레임워크.")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ExtendWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MockitoExtension")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserServiceTest")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Mock")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserRepository")]),t._v(" userRepository"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("when")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userRepository"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("anyLong")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("thenReturn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Test User"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" actual "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" userService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("actual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqualTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("actual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqualTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Test User"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_0613-orphanremoval"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0613-orphanremoval"}},[t._v("#")]),t._v(" 0613 - orphanRemoval")]),t._v(" "),a("p",[t._v("부모 엔티티와 연관관계가 끊어진 자식 엔티티를 자동으로 삭제해주는 기능이다.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Entity")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Id")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GeneratedValue")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@OneToMany")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mappedBy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"parent"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cascade "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CascadeType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ALL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orphanRemoval "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" childList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("orphanRemoval가 true 시")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" parent1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nparent1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getChildList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// delete 쿼리나간다.")]),t._v("\n")])])]),a("p",[t._v("자동으로 delete 쿼리가 나간다.")]),t._v(" "),a("ul",[a("li",[t._v("이 속성은 참조하는 곳이 하나일 때만 사용해야 한다.")]),t._v(" "),a("li",[t._v("특정 엔티티가 개인 소유할 때만 사용해야 한다.")]),t._v(" "),a("li",[t._v("@OneToOne과 @OneToMany에서만 사용이 가능하다.")])]),t._v(" "),a("p",[t._v("CascadeType.ALL + orphanRemovel=true"),a("br"),t._v("\n이 두개를 같이 사용하게 되면 부모 엔티티가 자식의 생명주기를 모두 관리할 수 있게 된다.")]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"_0615-cqrs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0615-cqrs"}},[t._v("#")]),t._v(" 0615 - CQRS")]),t._v(" "),a("h3",{attrs:{id:"cqrs-아키텍처란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cqrs-아키텍처란"}},[t._v("#")]),t._v(" CQRS 아키텍처란?")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://velog.velcdn.com/images/sangmin7648/post/306d4956-1d8b-474f-b3b9-431b0cb993ed/image.png",alt:"image"}})]),t._v(" "),a("blockquote",[a("p",[t._v("명령(시스템 데이터 변경) 역할을 수행하는 구성 요소와 쿼리(시스템 데이터 조회) 역할을 구새항하는 구성 요소를 나누는 아키텍처")])]),t._v(" "),a("p",[t._v("시스템 데이터를 변경하는 코드와 시스템 데이터를 조회하는 코드를 따로 만드는 것, 구현방식이나 시스템 규모에 따라서 DB를 나누기도하고 프로세스를 나누기도 함")]),t._v(" "),a("ul",[a("li",[t._v("Command : 명령\n"),a("ul",[a("li",[t._v("시스템 데이터 변경")]),t._v(" "),a("li",[t._v("ex) 주문 생성, 수정, 취소")])])]),t._v(" "),a("li",[t._v("Query : 조회\n"),a("ul",[a("li",[t._v("시스템 데이터 조회")]),t._v(" "),a("li",[t._v("ex) 주문 조회")])])]),t._v(" "),a("li",[t._v("Responsibility : 책임\n"),a("ul",[a("li",[t._v("구성 요소의 역할")]),t._v(" "),a("li",[t._v("구성 요소 ex) 클래스, 함수, 모듈, 패키지, 웹서버, DB 등")])])]),t._v(" "),a("li",[t._v("Segregation : 역할에 따라 구성 요소 나누기")])]),t._v(" "),a("h3",{attrs:{id:"단일-모델의-단점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#단일-모델의-단점"}},[t._v("#")]),t._v(" 단일 모델의 단점")]),t._v(" "),a("blockquote",[a("p",[t._v("명령과 쿼리를 구분해 피할 수 있는 문제들")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://velog.velcdn.com/images%2Fsangmin7648%2Fpost%2F955c1e24-1f0a-49db-a913-eb66cb07e0f0%2Fimage.png",alt:"image"}})]),t._v(" "),a("ul",[a("li",[t._v("기능 추가에 따라 코드의 책임이 모호해지고, 기능마다 다른 테이블에 의존하게 된다")]),t._v(" "),a("li",[t._v("명령은 한 영역의 데이터를 다루는데 반해 쿼리는 여러 영역의 데이터를 사용한다.")]),t._v(" "),a("li",[t._v("명령과 쿼리는 코드 변경 빈도와 사용자가 다르다. 서로 다른 이유로 모델의 코드가 바뀐다는 것은 책임의 분리가 적절하지 않다는 것이다.")]),t._v(" "),a("li",[t._v("기능마다 요구 성능이 다르다. 단일 모델은 기능에 맞는 다양한 성능 향상 기법 적용이 어렵다.\n"),a("ul",[a("li",[t._v("ex) 명령 : 사용자 주문 기능, 쿼리 : 백오피스 주문 목록 조회")])])])]),t._v(" "),a("h3",{attrs:{id:"cqrs의-구현"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cqrs의-구현"}},[t._v("#")]),t._v(" CQRS의 구현")]),t._v(" "),a("h4",{attrs:{id:"같은-프로세스-같은-dbms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#같은-프로세스-같은-dbms"}},[t._v("#")]),t._v(" 같은 프로세스, 같은 DBMS")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://velog.velcdn.com/images%2Fsangmin7648%2Fpost%2F10c1fe6b-f5c6-4cff-b5ea-6ac29da9efc1%2Fimage.png",alt:"image"}})]),t._v(" "),a("ul",[a("li",[t._v("코드 수준에서만 명령과 쿼리가 분리된다")]),t._v(" "),a("li",[t._v("데이터의 동일성이 보장된다")])]),t._v(" "),a("h4",{attrs:{id:"같은-프로세스-같은-dbms-다른-테이블"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#같은-프로세스-같은-dbms-다른-테이블"}},[t._v("#")]),t._v(" 같은 프로세스, 같은 DBMS, 다른 테이블")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://velog.velcdn.com/images%2Fsangmin7648%2Fpost%2Fb3dd095d-34b8-4050-8dbb-9fd5cabc5bd6%2Fimage.png",alt:"Image"}})]),t._v(" "),a("ul",[a("li",[t._v("쿼리 전용 테이블을 사용한다")]),t._v(" "),a("li",[t._v("코드 수준, 데이터 수준에서 명령과 쿼리가 분리된다")]),t._v(" "),a("li",[t._v("명령이 데이터를 변경할때, 쿼리 전용 테이블도 수정해야한다")])]),t._v(" "),a("h4",{attrs:{id:"같은-프로세스-다른-dbms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#같은-프로세스-다른-dbms"}},[t._v("#")]),t._v(" 같은 프로세스, 다른 DBMS")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://velog.velcdn.com/images%2Fsangmin7648%2Fpost%2F4374065b-f002-4f23-8b0f-967fcade226e%2Fimage.png",alt:"image"}})]),t._v(" "),a("ul",[a("li",[t._v("Redis를 캐시로 하고 쿼리 DB로 사용하는 경우를 생각해볼 수 있다")])]),t._v(" "),a("h4",{attrs:{id:"다른-프로세스-다른-dbms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#다른-프로세스-다른-dbms"}},[t._v("#")]),t._v(" 다른 프로세스, 다른 DBMS")]),t._v(" "),a("p",[t._v("![image]")]),t._v(" "),a("ul",[a("li",[t._v("MSA를 생각해볼 수 있다")])]),t._v(" "),a("h3",{attrs:{id:"_3가지-변경-전파-전략"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3가지-변경-전파-전략"}},[t._v("#")]),t._v(" 3가지 변경 전파 전략")]),t._v(" "),a("blockquote",[a("p",[t._v("CQRS 아키텍처에서 여러 DBMS를 사용하게 된다면 변경 전파 전략도 수립해야 한다")])]),t._v(" "),a("h4",{attrs:{id:"명령이-쿼리-dbms를-수정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#명령이-쿼리-dbms를-수정"}},[t._v("#")]),t._v(" 명령이 쿼리 DBMS를 수정")]),t._v(" "),a("ul",[a("li",[t._v("구현이 단순")]),t._v(" "),a("li",[t._v("쿼리 DB 장애시 데이터 유실 가능성이 있다")]),t._v(" "),a("li",[t._v("명령 기능이 쿼리 DB까지 접근하기 때문에 명령 기능의 에러 가능성이 높다")])]),t._v(" "),a("h4",{attrs:{id:"변경-내용-기록-후-전파기-사용"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#변경-내용-기록-후-전파기-사용"}},[t._v("#")]),t._v(" 변경 내용 기록 후, 전파기 사용")]),t._v(" "),a("ul",[a("li",[t._v("명령 DB에 변경 내용 테이블을 관리해야한다")]),t._v(" "),a("li",[t._v("데이터 변경과 변경 내용을 하나의 트랜잭션으로 처리할 수 있어 데이터 유실 방지가 가능하다")]),t._v(" "),a("li",[t._v("전파기를 구현해야한다")])]),t._v(" "),a("h4",{attrs:{id:"db가-제공하는-cdc-사용"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#db가-제공하는-cdc-사용"}},[t._v("#")]),t._v(" DB가 제공하는 CDC 사용")]),t._v(" "),a("ul",[a("li",[t._v("CDC : 데이터베이스에 있는 데이터의 변경을 파악하고 추적하는 소프트웨어 프로세스")]),t._v(" "),a("li",[t._v("명령 DB 바이너리 로그를 읽어 변경을 파악하고, 쿼리 DB에 전달할 수 있다")]),t._v(" "),a("li",[t._v("명령 코드가 변경 내용을 관리할 필요가 없다")])]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"_0616-msa와-soa의-차이"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0616-msa와-soa의-차이"}},[t._v("#")]),t._v(" 0616 - MSA와 SOA의 차이")]),t._v(" "),a("h3",{attrs:{id:"soa-msa란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#soa-msa란"}},[t._v("#")]),t._v(" SOA, MSA란?")]),t._v(" "),a("blockquote",[a("p",[t._v("SOA는 서비스 지향 설계 방식(Service Oriented Architecture)"),a("br"),t._v("\nSOA는 서비스 단위로 개발을 하고, 개발된 서비스들을 공유함으로써 재가용성을 늘리고 유연성을 확보하는 것을 목표")])]),t._v(" "),a("blockquote",[a("p",[t._v("MSA는 마이크로 서비스 설계 방식(Micro Service Architecture)"),a("br"),t._v("\nMSA 또한 아주 작은 단위의 서비스로 소프트웨어를 구성함으로써 민첩하고 유연한 설계하는 것을 목표")])]),t._v(" "),a("h4",{attrs:{id:"공유-지향점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#공유-지향점"}},[t._v("#")]),t._v(" 공유 지향점")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://velog.velcdn.com/images/hwang95/post/a979a2bc-d5c3-4f70-8249-bfd6cc016b10/soamsa.PNG",alt:"image"}})]),t._v(" "),a("p",[t._v("SOA는 비지니스 측면에서의 서비스 재사용성을 중요시하여 ESB(Enterprise Service Bus)라는 서비스 채널 이용 -> 서비스 공유, 재사용")]),t._v(" "),a("p",[t._v("MSA는 한 가지 작은 서비스에 집중하여 서비스 공유하지 않고 독립적 실행")]),t._v(" "),a("ul",[a("li",[t._v("SOA : 재사용을 통한 비용 절감")]),t._v(" "),a("li",[t._v("MSA : 서비스 간의 결합도를 낮추어 변화에 능동적으로 대응")])]),t._v(" "),a("h4",{attrs:{id:"기술-방식"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#기술-방식"}},[t._v("#")]),t._v(" 기술 방식")]),t._v(" "),a("ul",[a("li",[t._v("SOA는 공통의 서비스를 esb에 모아 사업 측면에서 공통 서비스 형식으로 서비스 제공")]),t._v(" "),a("li",[t._v("MSA는 각 독립된 서비스가 노출된 REST API를 사용")]),t._v(" "),a("li",[t._v("SOA는 서비스를 개발하고 최대한 재가용")]),t._v(" "),a("li",[t._v("MSA는 서비스가 공유되기 보다 독립적으로 실행되는 것을 지향")])]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"_0618-자바-테스트-격리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0618-자바-테스트-격리"}},[t._v("#")]),t._v(" 0618 - 자바 테스트 격리")]),t._v(" "),a("h3",{attrs:{id:"테스트-격리란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#테스트-격리란"}},[t._v("#")]),t._v(" 테스트 격리란?")]),t._v(" "),a("p",[t._v("테스트는 순서에 상관없이 독립적으로 실행되며 결정적으로 수행되어야 한다. 테스트를 서로 격리하여 한 테스트를 실행하여도 다른 테스트에 영향을 주지 않도록 해야한다.")]),t._v(" "),a("h3",{attrs:{id:"계층별-테스트"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#계층별-테스트"}},[t._v("#")]),t._v(" 계층별 테스트")]),t._v(" "),a("p",[t._v("데이터들이 공유되기 때문에 불완전한 테스트를 작성하게 된다. 따라서 데이터베이스를 얼마나 의존하지 않고 테스트를 작성할지 또는 데이터 베이스 상태를 테스트 이전으로 돌릴지에 대해서 신경을 써야 한다.\n"),a("img",{attrs:{src:"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FoxF8l%2FbtqUzwxi3Jt%2F7NE1JMAJPb7XMAyFJ2y6kk%2Fimg.png",alt:"image"}})]),t._v(" "),a("h4",{attrs:{id:"domain-pojo-계층"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#domain-pojo-계층"}},[t._v("#")]),t._v(" - Domain(POJO) 계층")]),t._v(" "),a("ul",[a("li",[t._v("애플리케이션의 POJO(Model, Utils, etc...)는 JUnit으로 테스트")]),t._v(" "),a("li",[t._v("객체는 new 연산자(또는 빌더)로 간단히 인스턴스화")]),t._v(" "),a("li",[t._v("각각의 테스트가 실행되기 전에 @BeforeEach에서 인스턴스 초기화")]),t._v(" "),a("li",[t._v("데이터베이스를 사용하지 않기 때문에 격리를 걱정할 필요 없음")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Question")]),t._v(" question"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@BeforeEach")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    question "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Question")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("builder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("userId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TEST_QUETION_TITLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TEST_QUESTION_CONTENT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@DisplayName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"조회수 초기값 확인"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initValueOfVisits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("question"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVisits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVisitCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqualTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@DisplayName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"조회수 증가"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("increaseVisits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    question"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("increaseVisits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("question"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVisits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVisitCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqualTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"service-계층"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service-계층"}},[t._v("#")]),t._v(" - Service 계층")]),t._v(" "),a("ul",[a("li",[t._v("실질적인 비즈니스 로직을 수행")]),t._v(" "),a("li",[t._v("실제 데이터베이스 사용")]),t._v(" "),a("li",[t._v("트랜잭션이 끝나면 데이터베이스 상태 변경")]),t._v(" "),a("li",[t._v("테스트 간 격리가 필요")]),t._v(" "),a("li",[t._v("실제 데이터베이스를 사용하면서 계층구조로 이루어져있기 때문에 사실상 통합 테스트가 되버림")]),t._v(" "),a("li",[t._v("@Transactional을 사용해서 테스트가 종료되면 rollback가능")]),t._v(" "),a("li",[t._v("Mockito를 이용하면 실제 데이터베이스를 사용하지 않기 때문에 테스트 격리를 고민할 필요가 없다.")])]),t._v(" "),a("h4",{attrs:{id:"controller-계층"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#controller-계층"}},[t._v("#")]),t._v(" - Controller 계층")]),t._v(" "),a("ul",[a("li",[t._v("@SpringBootTest\n"),a("ul",[a("li",[t._v("Spring IoC로 실제 컨트롤러 빈을 사용해서 테스트")]),t._v(" "),a("li",[t._v("실제 데이터베이스 사용")]),t._v(" "),a("li",[t._v("통합 테스트")])])]),t._v(" "),a("li",[t._v("@WebMvcTest\n"),a("ul",[a("li",[t._v("MockMvc RestAPI 클라이언트 테스트 도구 사용")]),t._v(" "),a("li",[t._v("데이터베이스를 사용하지 않고 단위 테스트 수행")])])])]),t._v(" "),a("h4",{attrs:{id:"repository-계층"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repository-계층"}},[t._v("#")]),t._v(" - Repository 계층")]),t._v(" "),a("ul",[a("li",[t._v("@DataJpaTest\n"),a("ul",[a("li",[t._v("Slice Test 진행")]),t._v(" "),a("li",[t._v("In Memory로 테스트 수행")]),t._v(" "),a("li",[t._v("자동으로 @Transactional(rollback=true)이 사용됨")])])])]),t._v(" "),a("h3",{attrs:{id:"인수-테스트"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#인수-테스트"}},[t._v("#")]),t._v(" 인수 테스트")]),t._v(" "),a("ul",[a("li",[t._v("시스템이 실제 운영 환경에서 사용될 준비가 되었는지 최종적으로 확인하는 단계")]),t._v(" "),a("li",[t._v("실제 운영환경에 맞게 서버를 띄우고 데이터베이스를 사용")]),t._v(" "),a("li",[t._v("테스트 격리를 신경쓰지 않으면 테스트가 실패하기 쉬움")]),t._v(" "),a("li",[t._v("테스트 단위가 커서 한번 실패하면 디버깅하기 까다로움")]),t._v(" "),a("li",[t._v("Mock 객체가 아닌 실제 빈을 사용")])]),t._v(" "),a("h4",{attrs:{id:"인수테스트-방법"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#인수테스트-방법"}},[t._v("#")]),t._v(" 인수테스트 방법")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("@Transactional : 인수 테스트에서 제대로 작동하지 않음. 요청을 보내는 http client 쪽과 실제 로직을 수행하는 서버로직이 서로 다른 쓰레드에서 실행된다. 테스트 코드에서 어노테이션을 롤백 전략으로 해두어도, 다른 스레드에서 실행되는 서버 사이드 트랜잭션은 그 테스트 코드의 영향을 받지 않고 데이터베이스가 변하게 된다.\n"),a("img",{attrs:{src:"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FRU1t0%2FbtqUBvdOrYi%2Fw2kwi1Q5BZ7IWdNOKpQPa1%2Fimg.png",alt:"image"}})])]),t._v(" "),a("li",[a("p",[t._v("매번 테스트 종료시 생성한 픽스처 및 데이터 삭제\n"),a("img",{attrs:{src:"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdnPh4v%2FbtqUtWqaFlR%2FKRtQQHcO9GKB2uDLfmNVn1%2Fimg.png",alt:"image"}})])]),t._v(" "),a("li",[a("p",[t._v("매번 테스트 종료시 테이블 Truncate")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Delete보다 Truncate가 좋은 이유")]),t._v(" "),a("ul",[a("li",[t._v("트랜잭션 로그 공간을 적게 차지")]),t._v(" "),a("li",[t._v("쿼리 실행시 행단위로 락을 걸지 않음")])])]),t._v(" "),a("li",[a("p",[t._v("3-1 @Sql로 SQL 파일 실행\n"),a("img",{attrs:{src:"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcIsYKn%2FbtqUuNmfBa6%2FfkYV5NnPOrydLHdzscl761%2Fimg.png",alt:"image"}})])]),t._v(" "),a("li",[a("p",[a("code",[t._v("3-2 EntityManager 이용")]),t._v("(보스독님이 추천하는 방식)\n엔티티 매니저로 쿼리를 직접 만들어서 실행하는 방식. 엔티티에 있는 테이블 이름을 가지고온 후 리스트에 저장\n"),a("img",{attrs:{src:"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FM127C%2FbtqUBvESPMW%2FEAMBpFpIQjbK6k3wATWgQK%2Fimg.png",alt:"image"}})])])]),t._v(" "),a("p",[t._v("데이터 베이스를 주입 받고 테스트를 실행하기 직전 @BeforeEach에서 테이블 이름을 조사한 후 Truncate를 실행. 이렇게 만들어 두면 추후 엔티티가 추가되거나 삭제될 때 동적으로 테이블을 조사하기 때문에 테스트 격리에 투입되는 비용을 줄일 수 있음")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FOo8nJ%2FbtqUvDKsjGT%2FDan2LsPFp9BJhaGHkokmKk%2Fimg.png",alt:"image"}})]),t._v(" "),a("h3",{attrs:{id:"정리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#정리"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),a("ul",[a("li",[t._v("잘격리된 테스트는 유지보수가 수월")]),t._v(" "),a("li",[t._v("더욱 안전한 테스트 작성으로 코드의 품질 보장")])])])}),[],!1,null,null,null);s.default=e.exports}}]);