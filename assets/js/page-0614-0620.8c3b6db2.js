(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{684:function(a,t,r){"use strict";r.r(t);var e=r(2),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"_0614-0620"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0614-0620"}},[a._v("#")]),a._v(" 0614 - 0620")]),a._v(" "),r("h2",{attrs:{id:"_0615-리눅스-디렉토리-구조"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0615-리눅스-디렉토리-구조"}},[a._v("#")]),a._v(" 0615 - 리눅스 디렉토리 구조")]),a._v(" "),r("h3",{attrs:{id:"리눅스-파일-시스템-구조"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#리눅스-파일-시스템-구조"}},[a._v("#")]),a._v(" 리눅스 파일 시스템 구조")]),a._v(" "),r("blockquote",[r("p",[a._v("리눅스 시스템의 디렉토리 구조는 역 트리(tree) 구조"),r("br"),a._v("\n리눅스 배포판들은 '리눅스 파일 시스템 구조'인 FSSTND라는 표준을 준수")])]),a._v(" "),r("h4",{attrs:{id:""}},[r("a",{staticClass:"header-anchor",attrs:{href:"#"}},[a._v("#")]),a._v(" /")]),a._v(" "),r("p",[a._v("최상위 디렉토리 루트")]),a._v(" "),r("h4",{attrs:{id:"bin"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bin"}},[a._v("#")]),a._v(" /bin")]),a._v(" "),r("p",[a._v("기본적인 명령어가 저장된 디렉토리, 명령어 디렉토리")]),a._v(" "),r("h4",{attrs:{id:"boot"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#boot"}},[a._v("#")]),a._v(" /boot")]),a._v(" "),r("p",[a._v("리눅스 부트로더가 존재하는 디렉토리")]),a._v(" "),r("h4",{attrs:{id:"dev"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dev"}},[a._v("#")]),a._v(" /dev")]),a._v(" "),r("p",[a._v("시스템 디바이스 파일을 저장하고 있는 디렉토리")]),a._v(" "),r("h4",{attrs:{id:"etc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#etc"}},[a._v("#")]),a._v(" etc")]),a._v(" "),r("p",[a._v("시스템의 거의 모든 설정파일이 존재하는 디렉토리")]),a._v(" "),r("h4",{attrs:{id:"home"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#home"}},[a._v("#")]),a._v(" /home")]),a._v(" "),r("p",[a._v("사용자의 홈디렉토리")]),a._v(" "),r("h4",{attrs:{id:"lib"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#lib"}},[a._v("#")]),a._v(" lib")]),a._v(" "),r("p",[a._v("커널모듈파일과 라이브러리파일 즉, 커널이 필요로하는 커널모듀파일들과 프로그램에 필요한 각종 라이브러리 파일들이 존재하는 디렉토리")]),a._v(" "),r("h4",{attrs:{id:"tmp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tmp"}},[a._v("#")]),a._v(" /tmp")]),a._v(" "),r("p",[a._v("공통디렉토리")]),a._v(" "),r("h4",{attrs:{id:"usr"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#usr"}},[a._v("#")]),a._v(" /usr")]),a._v(" "),r("p",[a._v("시스템이 아닌 일반사용자들이 주로 사용하는 디렉토리")]),a._v(" "),r("h4",{attrs:{id:"var"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#var"}},[a._v("#")]),a._v(" /var")]),a._v(" "),r("p",[a._v("시스템운용중에 생성되었다가 삭제되는 데이터를 일시적으로 저장하기 위한 디렉토리")]),a._v(" "),r("br"),a._v(" "),r("h2",{attrs:{id:"_0616-spring-webflux란"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0616-spring-webflux란"}},[a._v("#")]),a._v(" 0616 - Spring Webflux란?")]),a._v(" "),r("p",[a._v("Spring WebFlux는 Spring 5에서 새롭게 추가된 모듈. WebFlux는 클라이언트, 서버에서 reactive 스타일의 어플리케이션 개발을 도와주는 모듈. WebFlux는 reactive-stack web framework이며 non-blocking에 reactive stream을 지원.")]),a._v(" "),r("ul",[r("li",[a._v("reactive?"),r("br"),a._v("\n: I/O 이벤트에 반응하는 네트워크 컴포넌트, 마우스 이벤트에 반응하는 UI 컨트롤러 등과 같은 변화에 대한 반응을 중심으로 구축된 프로그래밍 모델. non-blocking은 blocking과 다르게 작업이 완료되거나 데이터를 사용가능한 상태가 되면 알림에 반응하는 방식이 있으므로 reactive하다고 말 할 수 있다.")]),a._v(" "),r("li",[a._v("reactive Streams는 back pressure가 있는 비동기 컴포넌트간의 상호 작용을 정의하는 소규모 사양\n"),r("ul",[r("li",[a._v("Subscriber가 Publisher의 데이터 생성 속도(빠르게/느리게)를 제어 할 수 있도록 하는것")])])])]),a._v(" "),r("p",[a._v("=> Spring이 가지지 못했던 비동기 프로그래밍을 보완하기 위한 Spring5에 webflux 모듈을 사용")]),a._v(" "),r("h3",{attrs:{id:"용도"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#용도"}},[a._v("#")]),a._v(" 용도")]),a._v(" "),r("ul",[r("li",[a._v("비동기-논블록킹 리엑티브 개발에 사용")]),a._v(" "),r("li",[a._v("효율적으로 동작하는 고성능 웹 어플리케이션 개발")]),a._v(" "),r("li",[a._v("서비스 간 호출이 많은 마이크로서비스 아키텍처에 적합")])]),a._v(" "),r("h3",{attrs:{id:"두가지-개발방식-지원"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#두가지-개발방식-지원"}},[a._v("#")]),a._v(" 두가지 개발방식 지원")]),a._v(" "),r("ul",[r("li",[a._v("기존의 MVC 방식")]),a._v(" "),r("li",[a._v("새로운 함수형 모델 (RouterFuction, HandlerFuction)")])]),a._v(" "),r("h3",{attrs:{id:"새로운-요청-응답-모델"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#새로운-요청-응답-모델"}},[a._v("#")]),a._v(" 새로운 요청 - 응답 모델")]),a._v(" "),r("ul",[r("li",[a._v("서블릿 스택과 API에서 탈피 (서블릿 API는 리엑티브 함수형 스타일에 적합하지 않음 - HttpServletRequest, HttpServletResponse)")]),a._v(" "),r("li",[a._v("ServerRequest, ServerResponse")])]),a._v(" "),r("h3",{attrs:{id:"동작흐름"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#동작흐름"}},[a._v("#")]),a._v(" 동작흐름")]),a._v(" "),r("ul",[r("li",[a._v("MVC : request - Dispatcher Servlet - Handler Mapper - Controller - B/L - Controller - ViewResolver ...")]),a._v(" "),r("li",[a._v("WebFlux : request - HttpHandler - WebHandler - Handler Mapper / Handler Adapter - Controller - B/L -Controller - ViewResolver ...")])]),a._v(" "),r("h3",{attrs:{id:"mono-flux"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mono-flux"}},[a._v("#")]),a._v(" Mono / Flux")]),a._v(" "),r("p",[a._v("Reactive Streams 인터페이스 중에서 Publisher를 구현 해 놓은 발행자.")]),a._v(" "),r("ul",[r("li",[a._v("Mono : 0 ~ 1개의 데이터 전달")]),a._v(" "),r("li",[a._v("Flux : 0 ~ N 개의 데이터 전달")])]),a._v(" "),r("br"),a._v(" "),r("h2",{attrs:{id:"_0620-클라우드-서비스-iaas-paas-saas"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0620-클라우드-서비스-iaas-paas-saas"}},[a._v("#")]),a._v(" 0620 - 클라우드 서비스 (IaaS, PaaS, SaaS)")]),a._v(" "),r("h3",{attrs:{id:"iaas"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#iaas"}},[a._v("#")]),a._v(" IaaS")]),a._v(" "),r("ul",[r("li",[a._v("서비스로서의 인프라스트럭처(Infrastructure as a Service)는 서버, 스토리지, 네트워크를 필요에 따라 인프라 자원을 사용할 수 있게 클라우드 서비스를 제공하는 형태 => 간략하게 컴퓨터만 할당 받는것")]),a._v(" "),r("li",[a._v("대표 서비스\n"),r("ul",[r("li",[a._v("AWS EC2, Google Cloud Platform, Azure Virtual Machines, Naver Cloud Platform")])])])]),a._v(" "),r("h3",{attrs:{id:"paas"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#paas"}},[a._v("#")]),a._v(" PaaS")]),a._v(" "),r("ul",[r("li",[a._v("PaaS(Platform as a Service)라고도하는 클라우드 플랫폼 서비스는 주로 애플리케이션에 사용되는 동안 특정 소프트웨어에 클라우드 구성요소를 제공 => 서버, 환경구성 제공 개발자는 소스만 올리면 된다.")]),a._v(" "),r("li",[a._v("대표 서비스\n"),r("ul",[r("li",[a._v("AWS Elastic Beanstalk, Windows Azure, Heroku")])])])]),a._v(" "),r("h3",{attrs:{id:"saas"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#saas"}},[a._v("#")]),a._v(" SaaS")]),a._v(" "),r("ul",[r("li",[a._v("서비스로서의 소프트웨어(Software as a Service)는 소프트웨어 및 관련 데이터는 중앙에 호스팅되고 사용자는 웹 브라우저 등의 클라이언트를 통해 접속하는 형태의 소프트웨어 전달 모델이다. 주문형 소프트웨어(on-demand software, 온디맨드)라고도 한다.")])])])}),[],!1,null,null,null);t.default=s.exports}}]);