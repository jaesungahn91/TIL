(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{697:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_1018-1024"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1018-1024"}},[t._v("#")]),t._v(" 1018 - 1024")]),t._v(" "),a("h2",{attrs:{id:"_1018-junit의-assertthat-assertj의-assertthat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1018-junit의-assertthat-assertj의-assertthat"}},[t._v("#")]),t._v(" 1018 - JUnit의 assertThat, assertj의 assertThat")]),t._v(" "),a("p",[t._v("테스트 코드는 크게 "),a("code",[t._v("실행 단계")]),t._v(", "),a("code",[t._v("검증 단계")]),t._v("로 나눌 수 있다.")]),t._v(" "),a("ul",[a("li",[t._v("실행 단계에서는 사용자 입력을 모방하여 테스트할 로직을 실행")]),t._v(" "),a("li",[t._v("검증 단계에서는 실행 단계가 예상한 대로 동작하는지 검증\nJUnit에서 검증 단계를 도와주는 메소드가 바로 assertThat이라는 메소드다.")])]),t._v(" "),a("h3",{attrs:{id:"org-junit-assert-assertthat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#org-junit-assert-assertthat"}},[t._v("#")]),t._v(" org.junit.Assert.assertThat")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" actual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" matcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("org.junit.Assert.assertThat의 기본 형태")]),t._v(" "),a("li",[t._v("actual 인자에 검증대상(실행 단계의 결과)을 넣고, 이와 비교하는 로직(matcher)을 주입받아 검증 단계를 수행한다.")])]),t._v(" "),a("blockquote",[a("p",[t._v("개발자가 matcher를 직접 구현하는것은 비효율적이고, 구현한 matcher에서 오류가 발생할 수 도 있다. matcher에서 오류가 발생하면 테스트가 실패하는데, 외부 요인에 영향을 받는 것은 좋은 테스트라고 할 수 없다. 따라서 JUnit의 assertThat은 hamcrest에 구현된 matcher을 사용하도록 강제하고 있다.")])]),t._v(" "),a("h4",{attrs:{id:"org-junit-assert-assertthat-예제-코드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#org-junit-assert-assertthat-예제-코드"}},[t._v("#")]),t._v(" org.junit.Assert.assertThat 예제 코드")]),t._v(" "),a("ul",[a("li",[t._v("0보다 커야한다")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Assert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertThat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hamcrest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matchers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("greaterThan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("number_test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mathService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greaterThan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("0보다 크고 10보다는 작야야 한다.")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Assert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertThat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hamcrest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matchers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("greaterThan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hamcrest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matchers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lessThan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hamcrest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AllOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("allOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("number_test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mathService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("allOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greaterThan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lessThan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"org-junit-assert-assertthat-단점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#org-junit-assert-assertthat-단점"}},[t._v("#")]),t._v(" org.junit.Assert.assertThat 단점")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("자동완성"),a("br"),t._v("\nallOf, greaterThan, lessThan 등의 메소드들을 미리 import 해놓지 않으면, IDE에서 자동완성을 해주지 못하기 때문에 필요한 메소드를 공식문서에서 찾거나, 이름을 외워서 작성해야 한다.")])]),t._v(" "),a("li",[a("p",[t._v("Assertion 분류(matcher)"),a("br"),t._v("\n위 로직에서는 int 타입에 대한 matcher만 필요한데, org.hamcrest.Matchers 클래스에는 여러 타입에 대한 matcher가 함께 들어있다. 그래서 원하는 matcher를 찾기가 힘들다.")])]),t._v(" "),a("li",[a("p",[t._v("확장성"),a("br"),t._v("\n추가된 조건도 같이 검증하기 위해서 allOf라는 메소드로 기존 조건과 묶어줘야 했다. assertj에서는 이런 불편함을 해결하고 메소드 체이닝 패턴형식으로 사용 가독성을 향상시킨 assertThat을 제공한다.")])])]),t._v(" "),a("h3",{attrs:{id:"org-assertj-core-api-assertions-assertthat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#org-assertj-core-api-assertions-assertthat"}},[t._v("#")]),t._v(" org.assertj.core.api.Assertions.assertThat")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractAssert")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("SELF"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" actual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("assertj의 assertThat은 인자로 actual(검증대상)만 받는다. 그리고 actual의 타입에 따라 AbstractAssert라는 추상클래스를 상속한 Assert 상속한 Assert 클래스를 반환한다.")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractIntegerAssert")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" actual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractDateAssert")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),t._v(" actual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractUriAssert")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URI")]),t._v(" actual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("타입에 따라 각 Assert 클래스를 반환하고 각 클래스들은 타입에 맞는 Assertion 메소드를 제공한다.")]),t._v(" "),a("ul",[a("li",[t._v("AbstractIntegerAssert (java.long.Integer)\n"),a("ul",[a("li",[t._v("isGreaterThan(int other)")]),t._v(" "),a("li",[t._v("isLessThan(int other)")]),t._v(" "),a("li",[t._v("...")])])]),t._v(" "),a("li",[t._v("AbstractDateAssert (java.util.Date)\n"),a("ul",[a("li",[t._v("hasTime(long timestamp)")]),t._v(" "),a("li",[t._v("hasYear(int year)")]),t._v(" "),a("li",[t._v("isAfter(Date other)")]),t._v(" "),a("li",[t._v("isBefore(Date other)")]),t._v(" "),a("li",[t._v("...")])])]),t._v(" "),a("li",[t._v("AbstractUriAssert (java.net.URI)\n"),a("ul",[a("li",[t._v("hasNoParameters()")]),t._v(" "),a("li",[t._v("hasNoQuery()")]),t._v(" "),a("li",[t._v("hasNoPort()")]),t._v(" "),a("li",[t._v("...")])])])]),t._v(" "),a("p",[t._v("=> 각 Assertion 메소드는 반환 타입이 SELF 이기 때문에 메소드 체이닝 패턴으로 테스트 로직을 작성할 수 있다.")]),t._v(" "),a("h4",{attrs:{id:"org-assertj-core-api-assertions-assertthat-예제-코드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#org-assertj-core-api-assertions-assertthat-예제-코드"}},[t._v("#")]),t._v(" org.assertj.core.api.Assertions.assertThat 예제 코드")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Assertions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertThat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("number_test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mathService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isGreaterThan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isLessThan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"정리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#정리"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),a("p",[t._v("JUnit, AssertJ가 제공하는 assertThat 메소드를 비교한 결과\n자동완성, Assertion분류, 확장성 세가지의 이유로 AssertJ의 assertThat을 사용해야 한다고 생각한다.")]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"_1019-정적-멤버-static-정적-키워드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1019-정적-멤버-static-정적-키워드"}},[t._v("#")]),t._v(" 1019 - 정적 멤버 static (정적 키워드)")]),t._v(" "),a("h3",{attrs:{id:"static-키워드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#static-키워드"}},[t._v("#")]),t._v(" static 키워드")]),t._v(" "),a("blockquote",[a("p",[t._v("클래스 멤버(변수, 메소드)에 붙이는 키워드"),a("br"),t._v("\n멤버변수는 클래스가 객체로 생성될 때 메모리에 로딩하지만, static 키워드가 붙은 멤버는 프로그램이 실행 될 때 메모리에 로드된다."),a("br"),t._v("\n클래스 멤버이긴 하지만 자기가 로드되기 위한 공간으로써만 클래스안에 선언하는 의미가 있다.")])]),t._v(" "),a("ol",[a("li",[t._v("멤버변수")]),t._v(" "),a("li",[t._v("멤버 메소드")])]),t._v(" "),a("ul",[a("li",[t._v("메소드 내에서 사용 불가")])]),t._v(" "),a("h3",{attrs:{id:"멤버변수"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#멤버변수"}},[t._v("#")]),t._v(" 멤버변수")]),t._v(" "),a("ul",[a("li",[t._v("static 변수, 정적변수, 공용변수")]),t._v(" "),a("li",[t._v("인스턴스를 생성하지 않고 바로 "),a("code",[t._v("클래스명.메소드()")]),t._v(" 또는 "),a("code",[t._v("클래스명.변수명")]),t._v("으로 접근이 가능하다.\n"),a("ul",[a("li",[t._v("Util Class : java.uitl.Math")])])]),t._v(" "),a("li",[t._v("멤버변수는 메모리에 한번 할당되어 프로그램이 종료될 떄 해제되는 변수로, 메모리에 한번 할당되므로 여러 객체가 해당 메모리를 공유하게 된다.")]),t._v(" "),a("li",[t._v("멤버 메소드를 호출하는 메소드 또한 멤버 메소드로 선언되어야 한다.")])]),t._v(" "),a("h3",{attrs:{id:"사용"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#사용"}},[t._v("#")]),t._v(" 사용")]),t._v(" "),a("ul",[a("li",[t._v("static 변수 : 일반적으로 상수들만 모아서 사용하며 상수의 변수명은 대문자와 _를 조합하여 이름짓고, 또한 상속을 방지하기 위해 final class로 선언을 한다.")]),t._v(" "),a("li",[t._v("static 메소드 : 상속을 방지하기 위해 final class로 선언을 하고, 유틸 관련된 함수들을 모아둔다.")])]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"_1020-트랜잭션-격리-수준-isolation-level"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1020-트랜잭션-격리-수준-isolation-level"}},[t._v("#")]),t._v(" 1020 - 트랜잭션 격리 수준(isolation level)")]),t._v(" "),a("h3",{attrs:{id:"트랜잭션-격리수준이란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#트랜잭션-격리수준이란"}},[t._v("#")]),t._v(" 트랜잭션 격리수준이란?")]),t._v(" "),a("blockquote",[a("p",[t._v("트랜잭션 격리수준(isolation level)이란 동시에 여러 트랜잭션이 처리될 떄, 트랜잭션끼리 얼마나 서로 고립되어 있는지를 나태내는 것이다."),a("br"),t._v("\n즉, 간단하게 말해 특정 트랜잭션이 다른 트랜잭션에 변경한 데이터를 볼 수 있도록 허용할지 말지를 결정하는 것이다.")])]),t._v(" "),a("p",[t._v("데이터베이스는 ACID 특징과 같이 트랜잭션이 독립적인 수행을 하도록 Locking을 통해, 트랜잭션이 DB를 다루는 동안 다른 트랜잭션이 관여하지 못하도록 막는 것이 필요하다.")]),t._v(" "),a("p",[t._v("하지만 무조건 Locking으로 동시에 수행되는 수많은 트랜잭션들을 순서대로 처리하는 방식으로 구현하게 되면 데이터베이스의 성능은 떨어지게 된다. 하지만, 성능을 높이기 위해 Locking의 범위를 줄인다면, 잘못된 값이 처리될 문제가 발생 할 수 있다.")]),t._v(" "),a("p",[t._v("따라서 최대한 효율적인 Locking 방법이 필요하다.")]),t._v(" "),a("h3",{attrs:{id:"lock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lock"}},[t._v("#")]),t._v(" Lock")]),t._v(" "),a("ul",[a("li",[t._v("Lock : 트랜잭션 처리의 순차성을 보장하기 위한 방법(동시성 제어)"),a("br"),t._v("\nDBMS 마다 Lock을 구현하는 방식이 다르기 때문에 DBMS를 효과적으로 이용하기 위해서 해당 DB의 Lock에 대한 이해가 요구된다.\n"),a("ul",[a("li",[t._v("공유(shared) lock : 데이터를 읽을 때 사용되어 지는 lock.\n"),a("ul",[a("li",[t._v("공유락은 공유락끼리 동시에 접근이 가능하다. 하지만, 공유락이 설정된 데이터에 배타락을 사용할 수는 없다.")])])]),t._v(" "),a("li",[t._v("배타(Exclusive) lock : 데이터를 변경하고자 할 때 사용되며, 트랜잭션이 완료될 떄까지 유지된다.\n"),a("ul",[a("li",[t._v("Lock이 해제될 떄까지 다른 트랜잭션(읽기 포함)은 해당 리소스에 접근할 수 없다.")]),t._v(" "),a("li",[t._v("해당 Lockdms 트랜잭션이 수행되고 있는 데이터에 대해서는 접근하여 함꼐 Lock을 설정할 수 없다.")])])])])])]),t._v(" "),a("h3",{attrs:{id:"격리-수준"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#격리-수준"}},[t._v("#")]),t._v(" 격리 수준")]),t._v(" "),a("ul",[a("li",[t._v("READ UNCOMMITTED (레벨 0)\n"),a("ul",[a("li",[t._v("SELECT 문장이 수행되는 동안 해당 데이터에 Shared Lock이 걸리지 않는 계층")]),t._v(" "),a("li",[t._v("트랜잭션에 처리중이거나, 아직 Commit되지 않은 데이터를 다른 트랜잭션이 읽는 것을 허용함")]),t._v(" "),a("li",[t._v("데이터베이스의 일관성을 유지하는 것이 불가능함")]),t._v(" "),a("li",[t._v("Dirty Read 발생 => 데이터 정합성에 문제발생")])])]),t._v(" "),a("li",[t._v("READ COMMITTED (레벨 1)\n"),a("ul",[a("li",[t._v("SELECT 문장이 수행되는 동안 해당 데이터에 Shared Lock이 걸리는 계층")]),t._v(" "),a("li",[t._v("트랜잭션이 수행되는 동안 다른 트랜잭션이 접근할 수 없어 대기하게 됨")]),t._v(" "),a("li",[t._v("Commit이 이루어진 트랜잭셔만 조회 가능")]),t._v(" "),a("li",[t._v("Non-Repeatable Read 발생")])])]),t._v(" "),a("li",[t._v("REPEATABLE READ (레발 2)\n"),a("ul",[a("li",[t._v("트랜잭션이 완료될 때까지 SELECT 문장이 사용되는 모든 데이터에 Shared Lock이 걸리는 계층")]),t._v(" "),a("li",[t._v("트랜잭션이 범위 내에서 조회한 데이터 내용이 항상 동일함을 보장함")]),t._v(" "),a("li",[t._v("다른 사용자는 트랜잭션 영역에 해당되는 데이터에 대한 수정 불가능")]),t._v(" "),a("li",[t._v("Non-Repeatable Read 부정합이 발생하지 않음")]),t._v(" "),a("li",[t._v("자신의 트랜잭션 번호보다 낮은 트랜잭션 번호에서 변경된(커밋된) 것만 보게 된다.")]),t._v(" "),a("li",[t._v("Phantom Read 발생")])])]),t._v(" "),a("li",[t._v("SERIALIZABLE (레발 3)\n"),a("ul",[a("li",[t._v("트랜잭션이 완료될 떄까지 SELECT 문장이 사용되는 모든 데이터에 Shared Lock이 걸리는 계층")]),t._v(" "),a("li",[t._v("가장 엄격한 격리 수준으로 완벽한 읽기 일관성 모드를 제공함")]),t._v(" "),a("li",[t._v("다른 사용자는 트랜잭션 영역에 해당되는 데이터에 대한 수정 및 입력 불가능")])])])]),t._v(" "),a("p",[t._v("아래로 내려갈수록 트랜잭션간 고립 정도가 높아지며, 성능이 떨어지는 것이 일반적이다."),a("br"),t._v("\n일반적인 온라인 서비스에서는 "),a("code",[t._v("READ COMMITTED")]),t._v("나 "),a("code",[t._v("REPEATABLE READ")]),t._v(" 중 하나를 사용한다."),a("br"),t._v("\n(oracle = READ COMMITTED, mysql = REPEATABLE READ)")]),t._v(" "),a("h3",{attrs:{id:"선택-시-고려사항"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#선택-시-고려사항"}},[t._v("#")]),t._v(" 선택 시 고려사항")]),t._v(" "),a("p",[t._v("Isolation Level에 대한 조정은, 동시성과 데이터 무결성에 연관되어 있다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("동시성을 증가시키면 데이터 무결성에 문제가 발생하고, 데이터 무결성을 유지하면 동시성이 떨어지게 된다.\n=> 트레이드 오프\n")])])]),a("br"),t._v(" "),a("h2",{attrs:{id:"_1022-이분-탐색"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1022-이분-탐색"}},[t._v("#")]),t._v(" 1022 - 이분 탐색")]),t._v(" "),a("ul",[a("li",[t._v("이진 탐색(이분 탐색) 알고리즘은 정렬되어 있는 리스트에서 탐색 범위를 절반씩 좁혀가며 데이터를 탐색하는 방법이다.")]),t._v(" "),a("li",[t._v("이진 탐색은 배열 내부의 데이터가 정렬되어 있어야만 사용할 수 있는 알고리즘이다.")]),t._v(" "),a("li",[t._v("변수 3개(start, end, mid)를 사용하여 탐색한다. 찾으려는 데이터와 중간점 위치에 있는 데이터를 반복적으로 비교해서 원하는 데이터를 찾는 것이 이진 탐색의 과정이다.")]),t._v(" "),a("li",[t._v("시간 복잡도는 O(logN) 이다.")])]),t._v(" "),a("h3",{attrs:{id:"자바-구현"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#자바-구현"}},[t._v("#")]),t._v(" 자바 구현")]),t._v(" "),a("ul",[a("li",[t._v("일반적인 이분 탐색 구현")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// left")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// right")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" mid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),a("ul",[a("li",[t._v("Lower Bound, Upper Bound 구현")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lowerBound")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" mid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("upperBound")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" mid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   \n")])])]),a("br"),t._v(" "),a("h2",{attrs:{id:"_1023-백엔드-기본-버전관리-시스템과-버전-관리-웹호스팅-서비스-결정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1023-백엔드-기본-버전관리-시스템과-버전-관리-웹호스팅-서비스-결정"}},[t._v("#")]),t._v(" 1023 - [백엔드 기본]버전관리 시스템과 버전 관리 웹호스팅 서비스 결정")]),t._v(" "),a("h3",{attrs:{id:"버전-관리-시스템"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#버전-관리-시스템"}},[t._v("#")]),t._v(" 버전 관리 시스템")]),t._v(" "),a("ul",[a("li",[t._v("사용이유 : 시스템의 도움을 받아 협업을 원활이 하는 것")]),t._v(" "),a("li",[t._v("변경을 쉽게 되돌릴 수 있다.")]),t._v(" "),a("li",[t._v("git, svn, mercurial")])]),t._v(" "),a("h3",{attrs:{id:"버전관리-웹호스팅-서비스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#버전관리-웹호스팅-서비스"}},[t._v("#")]),t._v(" 버전관리 웹호스팅 서비스")]),t._v(" "),a("ul",[a("li",[t._v("코드를 저장할 서버")]),t._v(" "),a("li",[t._v("hook을 통해 테스트실행 및 자동화 배포")]),t._v(" "),a("li",[t._v("pull request")]),t._v(" "),a("li",[t._v("github, gitlab, bitbucket")]),t._v(" "),a("li",[t._v("github : 이슈 트래커(GitHub Issues), Projects, ZenHub플러그인\n"),a("ul",[a("li",[t._v("특정 브랜치를 향한 pull request에 대해 n개 이상의 리뷰를 받아야 merge할 수 있는 기능")]),t._v(" "),a("li",[t._v("Organization에서 팀을 만들어 사용자를 포함시키고, 팀단위로 저장소에 각각에 read/write/admin 권한부여, 서브 팀을 만들어 더 세부적인 위계")])])])]),t._v(" "),a("h3",{attrs:{id:"git-gui"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-gui"}},[t._v("#")]),t._v(" Git GUI")]),t._v(" "),a("ul",[a("li",[t._v("github desktop")]),t._v(" "),a("li",[t._v("source tree")]),t._v(" "),a("li",[t._v("gitkraken")])]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"_1024-백엔드-기본-개발-프로세스-정립"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1024-백엔드-기본-개발-프로세스-정립"}},[t._v("#")]),t._v(" 1024 - [백엔드 기본]개발 프로세스 정립")]),t._v(" "),a("h3",{attrs:{id:"개발-프로세스-정립이란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#개발-프로세스-정립이란"}},[t._v("#")]),t._v(" 개발 프로세스 정립이란?")]),t._v(" "),a("ul",[a("li",[t._v("개발 프로세스는 어떻게 이슈를 관리하고, 어떤 방식으로 작업을 진행하고, 완료된 작업은 어떤 과정을 거쳐서 실제 제품에 반영시킬지와 같은 것들을 규칙화 시킨 것이다.\n"),a("ul",[a("li",[t._v("작업들이 어떤 상태인지(준비 중/진행 중/완료)")]),t._v(" "),a("li",[t._v("이슈를 실제로 처리하는 입장에서, 개발 프로세스에 따라 작업을 진행하면 어느 브랜치에서 어떤 이름으로 브랜치를 생성할지/어느 브랜치로 pull request를 올리며 리뷰를 받아야 할지/master merge 후 어떤 후속 작업을 진행해야 하는지와 같은 고민을 줄일 수 있따. 실제로 작성하는 코드에만 집중하는 환경을 만들 수 있다.")]),t._v(" "),a("li",[t._v("잘 정립된 개발 프로세스는 생산성을 높이는 것에 기여하며, 작업의 진행을 매끄럽게 만들고, 결과물의 퀄리티를 높인다.")])])])]),t._v(" "),a("h3",{attrs:{id:"이슈-관리-도구"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#이슈-관리-도구"}},[t._v("#")]),t._v(" 이슈 관리 도구")]),t._v(" "),a("ul",[a("li",[t._v("작업자를 assign")]),t._v(" "),a("li",[t._v("이슈에 대해 커뮤니케이션")]),t._v(" "),a("li",[t._v("태그/라벨 등으로 이슈의 종류를 구분")]),t._v(" "),a("li",[t._v("이슈의 상태를 통해 시각화")]),t._v(" "),a("li",[t._v("되도록 GitHub 내에서 해결")]),t._v(" "),a("li",[t._v("Asana, Jira, Trello, GitHub Issues & Projects")]),t._v(" "),a("li",[t._v("GitHub Issues & Projects\n"),a("ul",[a("li",[t._v("assign, issue conversation, customized label, filter by label, projects에 issues 연동, projects의 automation 기능을 통해 이슈 구분과 이슈 상태 자동 갱신")]),t._v(" "),a("li",[t._v("GitHub Issues에서 이슈를 등록하면 해당 이슈에 대한 번호가 매겨지고, 커밋 메시지에 #123 같이 번호를 명시에 두면 자동으로 해당 이슈가 링크")]),t._v(" "),a("li",[t._v("Projects, Issues")])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);